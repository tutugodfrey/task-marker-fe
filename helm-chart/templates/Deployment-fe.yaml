apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.selector.app }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.selector.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.selector.app }}
    spec:
      containers:
      - name: {{ .Values.container.name }}
        image: {{ .Values.container.image }}:{{ .Values.container.tag }}
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
        ports:
        - containerPort: {{ .Values.container.containerPort }}
        livenessProbe:
          httpGet:
            port: {{ .Values.container.containerPort }}
            path: /
          initialDelaySeconds: 10
          periodSeconds: 5
        imagePullPolicy: Always
        volumeMounts:
        - name: {{ .Values.volumes.shared_logs.name }}
          mountPath: {{ .Values.volumes.shared_logs.mountPath }}
        - name: {{ .Values.volumes.nginx_volume.name }}
          mountPath: {{ .Values.volumes.nginx_volume.mountPath }}
          subPath: nginx.conf
      - name: log-container
        image: busybox:latest
        command: ["sh", "-c", "while true; do cat /var/log/nginx/access.log /var/log/nginx/error.log; sleep 30; done"]
        # command: ["sh", "-c", "while true; do echo Hello; done"]
        volumeMounts:
        - name: {{ .Values.volumes.shared_logs.name }}
          mountPath: {{ .Values.volumes.shared_logs.mountPath }}    
      volumes:
      - name: {{ .Values.volumes.shared_logs.name }}
        emptyDir: {}
      - name: {{ .Values.volumes.nginx_volume.name }}
        configMap:
          name: {{ .Values.configMap.name }}
